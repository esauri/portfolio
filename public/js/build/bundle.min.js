/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _projects = __webpack_require__(1);

	(function () {
	  'use strict';

	  var openSidebarBtn = document.getElementById('open-menu-btn'),
	      closeSidebarBtn = document.getElementById('close-menu-btn'),
	      sidebar = document.querySelector('.nav-global');

	  openSidebarBtn.addEventListener('click', openSidebar);
	  closeSidebarBtn.addEventListener('click', closeSidebar);

	  function openSidebar(event) {
	    sidebar.classList.add('open');
	  }

	  function closeSidebar(event) {
	    sidebar.classList.remove('open');
	  }

	  // If work page
	  if (document.getElementsByClassName('project-slideshow').length > 0) {
	    (0, _projects.Projects)();
	  }
	})();

/***/ },
/* 1 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	function Projects() {
	  var currentProjectSlide = void 0,
	      projectSlideshow = void 0,
	      projectSlideNav = void 0,
	      projectSlides = void 0,
	      prevProjectBtn = void 0,
	      nextProjectBtn = void 0,
	      autoRun = void 0;

	  var PROJECT_TIMER = 5000;
	  // Get the slide show
	  projectSlideshow = document.getElementsByClassName('project-slideshow')[0];

	  // Get the slides
	  projectSlides = Array.from(projectSlideshow.getElementsByClassName('project-slide'));

	  // Get the current visible
	  currentProjectSlide = projectSlideshow.getElementsByClassName('visible')[0];

	  // Get the projects nav
	  projectSlideNav = Array.from(document.getElementsByClassName('project-slideshow-btn'));

	  // Get the previous project button
	  prevProjectBtn = document.getElementsByClassName('project-slideshow-up-arrow')[0];

	  // Get the next project button
	  nextProjectBtn = document.getElementsByClassName('project-slideshow-down-arrow')[0];

	  // Add click event listener
	  prevProjectBtn.addEventListener('click', function (event) {
	    previousProject(projectSlides, currentProjectSlide, projectSlideNav);
	    clearInterval(autoRun);
	  });

	  // Add click event listener
	  nextProjectBtn.addEventListener('click', function (event) {
	    nextProject(projectSlides, currentProjectSlide, projectSlideNav);
	    clearInterval(autoRun);
	  });

	  // Every 5 seconds switch to next slide
	  autoRun = setInterval(function () {
	    nextProject(projectSlides, currentProjectSlide, projectSlideNav);
	  }, PROJECT_TIMER);

	  projectSlideNav.forEach(function (nav) {
	    var newIndex = parseInt(nav.innerHTML) + 1;

	    nav.innerHTML = newIndex;

	    nav.addEventListener('click', changeProject);
	  });

	  function previousProject(slides, currentSlide, slideNav) {
	    var newSlide = void 0,
	        currentNav = void 0,
	        newNav = void 0,
	        currentSlideIndex = slides.indexOf(currentSlide);

	    // Set the current nav item to the parent node using currentSlideIndex
	    currentNav = slideNav[currentSlideIndex].parentNode;

	    if (currentSlideIndex === 0) {
	      newSlide = slides[slides.length - 1];
	      newNav = slideNav[slides.length - 1].parentNode;
	    } else {
	      newSlide = slides[currentSlideIndex - 1];
	      newNav = slideNav[currentSlideIndex - 1].parentNode;
	    }

	    currentNav.classList.remove('current');
	    currentSlide.classList.remove('visible');
	    newNav.classList.add('current');
	    newSlide.classList.add('visible');
	    currentProjectSlide = newSlide;
	  }

	  function nextProject(slides, currentSlide, slideNav) {
	    var newSlide = void 0,
	        currentNav = void 0,
	        newNav = void 0,
	        currentSlideIndex = slides.indexOf(currentSlide);

	    // Set the current nav item to the parent node using currentSlideIndex
	    currentNav = slideNav[currentSlideIndex].parentNode;

	    if (currentSlideIndex < slides.length - 1) {
	      newSlide = slides[currentSlideIndex + 1];
	      newNav = slideNav[currentSlideIndex + 1].parentNode;
	    } else {
	      newSlide = slides[0];
	      newNav = slideNav[0].parentNode;
	    }

	    currentNav.classList.remove('current');
	    currentSlide.classList.remove('visible');
	    newNav.classList.add('current');
	    newSlide.classList.add('visible');
	    currentProjectSlide = newSlide;
	  }

	  function changeProject(event) {
	    var newSlide = void 0,
	        index = parseInt(event.target.innerHTML) - 1,
	        currentSlideIndex = projectSlides.indexOf(currentProjectSlide);

	    currentProjectSlide.classList.remove('visible');
	    projectSlideNav[currentSlideIndex].parentNode.classList.remove('current');
	    newSlide = projectSlides[index];
	    newSlide.classList.add('visible');
	    event.target.parentNode.classList.add('current');
	    currentProjectSlide = newSlide;
	    clearInterval(autoRun);
	  }
	}

	exports.Projects = Projects;

/***/ }
/******/ ]);